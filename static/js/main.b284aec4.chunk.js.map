{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_BY_ALPHABETICALLY","SORT_BY_LENGTH","App","useState","typeOfSort","setTypeOfSort","isReversed","setIsReversed","visibleEffects","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","handleSort","sortType","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"yNAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAyB,WACzBC,EAAiB,SA2BhB,IAAMC,EAAM,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAA1B,GAA8D,IAA3BL,EAA0B,EAA1BA,WAAYE,EAAc,EAAdA,WACzCI,EAAa,UAAOX,GAqBxB,OAnBIK,IACFM,EAAgBA,EAAcC,MAAK,SAACC,EAAOC,GACzC,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,OAKXT,GACFI,EAAcM,UAGTN,EAMgBO,CACrBlB,EAAiB,CAAEK,aAAYE,eAG3BY,EAAa,SAACC,GAClBd,EAAcc,GACdZ,GAAc,IAGhB,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBpB,IAA2BI,EAAa,GAAK,YAC1EkB,QAAS,kBAAMJ,EAAWlB,IAH5B,iCAQA,wBACEqB,KAAK,SACLD,UAAS,4BAAuBnB,IAAmBG,EAAa,GAAK,YACrEkB,QAAS,kBAAMJ,EAAWjB,IAH5B,4BAQA,wBACEoB,KAAK,SACLD,UAAS,4BAAuBd,EAAa,GAAK,YAClDgB,QAAS,kBAAMf,GAAeD,IAHhC,sBAQEF,GAAcE,IACd,wBACEe,KAAK,SACLD,UAAU,4BACVE,QAAS,WACPjB,EAAc,IACdE,GAAc,IALlB,sBAaJ,6BACGC,EAAee,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCjGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b284aec4.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_BY_ALPHABETICALLY = 'alphabet';\nconst SORT_BY_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { typeOfSort, isReversed }) {\n  let preparedGoods = [...goodsFromServer];\n\n  if (typeOfSort) {\n    preparedGoods = preparedGoods.sort((good1, good2) => {\n      switch (typeOfSort) {\n        case SORT_BY_ALPHABETICALLY:\n          return good1.localeCompare(good2);\n\n        case SORT_BY_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [typeOfSort, setTypeOfSort] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleEffects = getPreparedGoods(\n    goodsFromServer, { typeOfSort, isReversed },\n  );\n\n  const handleSort = (sortType) => {\n    setTypeOfSort(sortType);\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={`button is-info ${SORT_BY_ALPHABETICALLY === typeOfSort ? '' : 'is-light'}`}\n          onClick={() => handleSort(SORT_BY_ALPHABETICALLY)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-success ${SORT_BY_LENGTH === typeOfSort ? '' : 'is-light'}`}\n          onClick={() => handleSort(SORT_BY_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${isReversed ? '' : 'is-light'}`}\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(typeOfSort || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              setTypeOfSort('');\n              setIsReversed(false);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleEffects.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}